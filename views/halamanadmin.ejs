Halaman Admin(melihat order dan CRUD produk)
Tambah

<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Admin - Toko Bunga Kami</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f8f9fa;
        }
        h1, h2 {
            color: #333;
        }
        .container {
            max-width: 1100px;
        }
        .table th, .table td {
            vertical-align: middle;
        }
        .modal-header {
            background-color: #28a745;
            color: white;
        }
        .btn-primary, .btn-success, .btn-warning, .btn-danger {
            border-radius: 5px;
        }
        .btn-primary {
            background-color: #007bff;
        }
        .btn-success {
            background-color: #28a745;
        }
        .btn-warning {
            background-color: #ffc107;
        }
        .btn-danger {
            background-color: #dc3545;
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <h1 class="text-center mb-4">Toko Bunga Kami - Halaman Admin</h1>

    <!-- Bagian CRUD Stok Produk -->
    <h2>Stok Produk</h2>
    <button class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#addProductModal">Tambah Produk</button>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Nama Paket</th>
                <th>Stok</th>
                <th>Harga</th>
                <th>Aksi</th>
            </tr>
        </thead>
        <tbody id="productStockList">
            <!-- Data stok produk akan ditampilkan di sini -->
        </tbody>
    </table>

    <!-- Bagian Pesanan -->
    <h2>Pesanan</h2>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID Pesanan</th>
                <th>Nama Paket</th>
                <th>Jumlah</th>
                <th>Total Harga</th>
                <th>Aksi</th>
            </tr>
        </thead>
        <tbody id="orderList">
            <!-- Data pesanan akan ditampilkan di sini -->
        </tbody>
    </table>
</div>

<!-- Modal untuk Menambah Produk -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Tambah Produk</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addProductForm">
                    <div class="mb-3">
                        <label for="productName" class="form-label">Nama Paket</label>
                        <input type="text" class="form-control" id="productName" required>
                    </div>
                    <div class="mb-3">
                        <label for="productStock" class="form-label">Stok</label>
                        <input type="number" class="form-control" id="productStock" required>
                    </div>
                    <div class="mb-3">
                        <label for="productPrice" class="form-label">Harga</label>
                        <input type="number" class="form-control" id="productPrice" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Tambah Produk</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal untuk Mengedit Produk -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Produk</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProductForm">
                    <div class="mb-3">
                        <label for="editProductName" class="form-label">Nama Paket</label>
                        <input type="text" class="form-control" id="editProductName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editProductStock" class="form-label">Stok</label>
                        <input type="number" class="form-control" id="editProductStock" required>
                    </div>
                    <div class="mb-3">
                        <label for="editProductPrice" class="form-label">Harga</label>
                        <input type="number" class="form-control" id="editProductPrice" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
<script>
$(document).ready(function () {
    // Simulasi data produk dan pesanan
    const products = [
        { id: 1, nama_paket: 'Buket Mawar', stok: 50, harga: 100000 },
        { id: 2, nama_paket: 'Buket Tulip', stok: 30, harga: 120000 }
    ];
    const orders = [
        { id: 1, productName: 'Buket Mawar', quantity: 2, totalPrice: 200000 },
        { id: 2, productName: 'Buket Tulip', quantity: 1, totalPrice: 120000 }
    ];

    // Menampilkan stok produk
    function loadProductStock() {
        const productStockList = $('#productStockList');
        productStockList.html('');
        products.forEach(product => {
            const row = `<tr data-id="${product.id}">
                <td>${product.nama_paket}</td>
                <td>${product.stok}</td>
                <td>Rp. ${product.harga}</td>
                <td>
                    <button class="btn btn-warning btn-sm" onclick="editProduct(${product.id})">Edit</button>
                    <button class="btn btn-danger btn-sm" onclick="deleteProduct(${product.id})">Hapus</button>
                </td>
            </tr>`;
            productStockList.append(row);
        });
    }

    // Menampilkan pesanan
    function loadOrders() {
        const orderList = $('#orderList');
        orderList.html('');
        orders.forEach(order => {
            const row = `<tr>
                <td>${order.id}</td>
                <td>${order.productName}</td>
                <td>${order.quantity}</td>
                <td>Rp. ${order.totalPrice}</td>
                <td>
                    <button class="btn btn-danger btn-sm" onclick="deleteOrder(${order.id})">Hapus</button>
                </td>
            </tr>`;
            orderList.append(row);
        });
    }

    // Menambah produk
    $('#addProductForm').on('submit', function (e) {
        e.preventDefault();
        const name = $('#productName').val();
        const stock = $('#productStock').val();
        const price = $('#productPrice').val();

        const newProduct = {
            id: products.length + 1,
            nama_paket: name,
            stok: stock,
            harga: price
        };
        products.push(newProduct);
        loadProductStock();
        $('#addProductModal').modal('hide');
    });
    // Mengedit produk
    window.editProduct = function (productId) {
        const product = products.find(p => p.id === productId);
        if (product) {
            $('#editProductName').val(product.nama_paket);
            $('#editProductStock').val(product.stok);
            $('#editProductPrice').val(product.harga);
            $('#editProductModal').modal('show');
            $('#editProductForm').on('submit', function (e) {
                e.preventDefault();
                product.nama_paket = $('#editProductName').val();
                product.stok = $('#editProductStock').val();
                product.harga = $('#editProductPrice').val();
                loadProductStock();
                $('#editProductModal').modal('hide');
            });
        }
    };

    // Menghapus produk
    window.deleteProduct = function (productId) {
        const index = products.findIndex(product => product.id === productId);
        if (index !== -1) {
            products.splice(index, 1);
            loadProductStock();
        }
    };

    // Menghapus pesanan
    window.deleteOrder = function (orderId) {
        const index = orders.findIndex(order => order.id === orderId);
        if (index !== -1) {
            orders.splice(index, 1);
            loadOrders();
        }
    };

    // Memuat data saat halaman dimuat
    loadProductStock();
    loadOrders();
});
</script>

</body>
</html>